openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /api/statistics/:
    get:
      tags:
      - api
      - statistics
      summary: Get All Sessions
      operationId: get_all_sessions_api_statistics__get
      responses:
        '200':
          description: Get statistics
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionData'
                type: array
                title: Response Get All Sessions Api Statistics  Get
    post:
      tags:
      - api
      - statistics
      summary: Create Session
      operationId: create_session_api_statistics__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionData'
        required: true
      responses:
        '201':
          description: Add new session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionData'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/statistics/{session_id}:
    get:
      tags:
      - api
      - statistics
      summary: Get Session By Id
      operationId: get_session_by_id_api_statistics__session_id__get
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
          title: Session Id
      responses:
        '200':
          description: Get session statistic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionData'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - api
      - statistics
      summary: Delete Session
      operationId: delete_session_api_statistics__session_id__delete
      parameters:
      - name: session_id
        in: path
        required: true
        schema:
          type: string
          title: Session Id
      responses:
        '204':
          description: Delete a session statistic
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user/:
    get:
      tags:
      - api
      - user
      summary: Get All Users
      operationId: get_all_users_api_user__get
      responses:
        '200':
          description: List all users
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
                title: Response Get All Users Api User  Get
    post:
      tags:
      - api
      - user
      summary: Create User
      operationId: create_user_api_user__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      responses:
        '201':
          description: Add new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user/{user_id}:
    get:
      tags:
      - api
      - user
      summary: Get User
      operationId: get_user_api_user__user_id__get
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          title: User Id
      responses:
        '200':
          description: Retrieve a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - api
      - user
      summary: Update User
      operationId: update_user_api_user__user_id__put
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: Update user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - api
      - user
      summary: Delete User
      operationId: delete_user_api_user__user_id__delete
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          title: User Id
      responses:
        '204':
          description: Delete a user
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    ActionTypeEnum:
      type: string
      const: conversation
      title: ActionTypeEnum
    CreateSessionData:
      properties:
        student:
          type: string
          title: Student
        group:
          type: integer
          title: Group
        email:
          type: string
          format: email
          title: Email
        course:
          type: string
          title: Course
        session:
          type: string
          title: Session
        actions:
          items:
            $ref: '#/components/schemas/Payload'
          type: array
          title: Actions
      type: object
      required:
      - student
      - group
      - email
      - course
      - session
      title: CreateSessionData
      example:
        actions:
        - action_type: conversation
          date: '2024-02-02'
          element_name: "\u0441\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C"
          element_type: button
          event_type: mousedown
          page: http://e.moevm.info/some_course
          time: '14:00:00'
        course: "\u041A\u0443\u0440\u0441 \u043C\u043E\u043B\u043E\u0434\u043E\u0433\
          \u043E \u0431\u043E\u0439\u0446\u0430"
        email: iiivanov@edu.ru
        group: 1303
        session: sessionId
        student: "\u0418\u0432\u0430\u043D\u043E\u0432 \u0418\u0432\u0430\u043D"
    CreateUser:
      properties:
        name:
          type: string
          title: Name
        surname:
          type: string
          title: Surname
        lastname:
          type: string
          title: Lastname
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          title: Password
      type: object
      required:
      - name
      - surname
      - lastname
      - email
      - password
      title: CreateUser
      example:
        email: iiivanov@edu.ru
        lastname: "\u0418\u0432\u0430\u043D\u043E\u0432\u0438\u0447"
        name: "\u0418\u0432\u0430\u043D"
        password: sdfsdfwgesdgcx
        surname: "\u0418\u0432\u0430\u043D\u043E\u0432"
    ElementTypeEnum:
      type: string
      const: button
      title: ElementTypeEnum
    EventTypeEnum:
      type: string
      const: mousedown
      title: EventTypeEnum
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    Payload:
      properties:
        date:
          type: string
          title: Date
        time:
          type: string
          title: Time
        page:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Page
        element_type:
          $ref: '#/components/schemas/ElementTypeEnum'
        element_name:
          type: string
          title: Element Name
        action_type:
          $ref: '#/components/schemas/ActionTypeEnum'
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
      type: object
      required:
      - page
      - element_type
      - element_name
      - action_type
      - event_type
      title: Payload
      example:
        action_type: conversation
        date: '2024-03-16'
        element_name: "\u043E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C"
        element_type: button
        event_type: mousedown
        page: https://example.com
        time: '16:16:05.879157'
    Role:
      type: string
      enum:
      - admin
      - regular
      title: Role
    SessionData:
      properties:
        _id:
          type: string
          title: ' Id'
        student:
          type: string
          title: Student
        group:
          type: integer
          title: Group
        email:
          type: string
          format: email
          title: Email
        course:
          type: string
          title: Course
        session:
          type: string
          title: Session
        actions:
          items:
            $ref: '#/components/schemas/Payload'
          type: array
          title: Actions
      type: object
      required:
      - student
      - group
      - email
      - course
      - session
      title: SessionData
      example:
        actions:
        - action_type: conversation
          date: '2024-02-02'
          element_name: "\u0441\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C"
          element_type: button
          event_type: mousedown
          page: http://e.moevm.info/some_course
          time: '14:00:00'
        course: "\u041A\u0443\u0440\u0441 \u043C\u043E\u043B\u043E\u0434\u043E\u0433\
          \u043E \u0431\u043E\u0439\u0446\u0430"
        email: iiivanov@edu.ru
        group: 1303
        id: 16775ef6-2055-474f-8bb0-17129a9e9bb4
        session: sessionId
        student: "\u0418\u0432\u0430\u043D\u043E\u0432 \u0418\u0432\u0430\u043D"
    UpdateUser:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        surname:
          anyOf:
          - type: string
          - type: 'null'
          title: Surname
        lastname:
          anyOf:
          - type: string
          - type: 'null'
          title: Lastname
        email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Email
        position:
          anyOf:
          - $ref: '#/components/schemas/Role'
          - type: 'null'
        password:
          anyOf:
          - type: string
          - type: 'null'
          title: Password
      type: object
      required:
      - name
      - surname
      - lastname
      - email
      - position
      - password
      title: UpdateUser
      example:
        email: iiivanov@edu.ru
        lastname: "\u0418\u0432\u0430\u043D\u043E\u0432\u0438\u0447"
        name: "\u0418\u0432\u0430\u043D"
        password: sdfsdfwgesdgcx
        position: regular
        surname: "\u0418\u0432\u0430\u043D\u043E\u0432"
    User:
      properties:
        _id:
          type: string
          title: ' Id'
        name:
          type: string
          title: Name
        surname:
          type: string
          title: Surname
        lastname:
          type: string
          title: Lastname
        email:
          type: string
          format: email
          title: Email
        position:
          $ref: '#/components/schemas/Role'
        password:
          type: string
          title: Password
      type: object
      required:
      - name
      - surname
      - lastname
      - email
      - position
      - password
      title: User
      example:
        email: iiivanov@edu.ru
        id: 93847760-2d50-44f2-b524-b2d167c91016
        lastname: "\u0418\u0432\u0430\u043D\u043E\u0432\u0438\u0447"
        name: "\u0418\u0432\u0430\u043D"
        password: sdfsdfwgesdgcx
        position: regular
        surname: "\u0418\u0432\u0430\u043D\u043E\u0432"
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
